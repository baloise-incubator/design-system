@import 'node_modules/bulma/sass/utilities/mixins.sass';
@import 'derived-variables';

@mixin font-smoothing() {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@mixin lhCrop($line-height) {
  &::before {
    content: '';
    display: block;
    height: 0;
    width: 0;
    margin-top: calc((1 - #{$line-height}) * 0.5em);
  }
}

@mixin property-horizontal($prop, $start, $end: $start) {
  @if $start == 0 and $end == 0 {
    #{$prop}-left: $start;
    #{$prop}-right: $end;
  } @else {
    #{$prop}-left: $start;
    #{$prop}-right: $end;

    @at-root {
      @supports ((margin-inline-start: 0) or (-webkit-margin-start: 0)) {
        & {
          @if $start != null {
            #{$prop}-left: unset;
          }
          @if $end != null {
            #{$prop}-right: unset;
          }

          -webkit-#{$prop}-start: $start;
          #{$prop}-inline-start: $start;
          -webkit-#{$prop}-end: $end;
          #{$prop}-inline-end: $end;
        }
      }
    }
  }
}

@mixin property($prop, $top, $end: $top, $bottom: $top, $start: $end) {
  @include property-horizontal($prop, $start, $end);
  #{$prop}-top: $top;
  #{$prop}-bottom: $bottom;
}

@mixin margin($top, $end: $top, $bottom: $top, $start: $end) {
  @include property(margin, $top, $end, $bottom, $start);
}

@mixin padding($top, $end: $top, $bottom: $top, $start: $end) {
  @include property(padding, $top, $end, $bottom, $start);
}
